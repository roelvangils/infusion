<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Infusion Pattern Library Builder on Infusion</title>
    <link>https://thepaciellogroup.github.io/infusion/</link>
    <description>Recent content in The Infusion Pattern Library Builder on Infusion</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jun 2017 18:27:58 +0100</lastBuildDate>
    
	<atom:link href="https://thepaciellogroup.github.io/infusion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code blocks</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/code-blocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/code-blocks/</guid>
      <description>Markdown already supports code samples both inline (using single backticks like `some code here`) and in blocks. Infusion will syntax highlight HTML, CSS, and JavaScript if you provide the correct language in the formulation of the block.
So, this&amp;hellip;
```html &amp;lt;button aria-pressed=&#34;false&#34;toggle me&amp;lt;/button ```  &amp;hellip; will result in this:
&amp;lt;button aria-pressed=&amp;quot;false&amp;quot;&amp;gt;toggle me&amp;lt;/button&amp;gt;  Note that the syntax highlighting uses a greyscale theme. Infusion is careful not to use color as part of its own design, because these colors may clash with those of the design being illustrated and discussed.</description>
    </item>
    
    <item>
      <title>Installation and configuration</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/installation/</guid>
      <description>To use Albos in a production environment, you need to include albos.min.js in your HTML document. The easiest way is to use our CDN version, but you can also use NPM or clone the repository locally.
Get the file Link to the file using our CDN If you don&amp;rsquo;t mind hosting from an external location, you can simply paste this line of code before your closing &amp;lt;/body&amp;gt;:
&amp;lt;script src=&amp;quot;cdn/albos.min.js&amp;quot; /&amp;gt;  Using NPM To host NPM yourself and it include it as a depency in other projects, install the Albos package using NPM:</description>
    </item>
    
    <item>
      <title>Project structure</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/project-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/project-structure/</guid>
      <description>Before you can set about making documentation, you need to know where everything goes. The simplest folder structure looks like this:
 content  _index.md print-version.md patterns  name-of-my-pattern.md name-of-my-other-pattern.md      /content - This is where all of your content lives. You won&amp;rsquo;t need to visit any other folders very frequently. _index.md — This is the content file for your home page. print-version.md — This is a placeholder for the single-page / print-friendly version of you library.</description>
    </item>
    
    <item>
      <title>Demo embedding</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/demo-embedding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/demo-embedding/</guid>
      <description>Sometimes just pictures of the pattern you&amp;rsquo;re documenting aren&amp;rsquo;t enough. Interactive patterns benefit from live demos, so that readers can test their functionality.
CodePen Infusion offers a couple of ways to do this. The first is by embedding CodePen demos into the content. The codePen shortcode takes just one argument: the codePen&amp;rsquo;s ID.
&amp;#x7b;{% codePen VpVNKW %}}  This will embed the identified codePen into the content wherever you placed the shortcode, with the result view showing by default:</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/setup/</guid>
      <description>By now, you should have followed the instructions. You should have Hugo and Node installed, and a local copy of a forked version of Infusion. You should also have run npm install in the root of that codebase.
&amp;ldquo;Cleaning&amp;rdquo; the content folder Before you can start writing documentation, there are a few things still to do in order to get set up. At the moment, your version of Infusion is a facsimile of the original, containing all the content you&amp;rsquo;re reading right now.</description>
    </item>
    
    <item>
      <title>Markdown &amp; metadata</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/markdown-and-metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/markdown-and-metadata/</guid>
      <description>In Infusion everything is documented using markdown, as a &amp;ldquo;pattern&amp;rdquo;. To create a new pattern file, just add a file with the .md extension to the content/patterns folder. It&amp;rsquo;s recommended you use &amp;ldquo;kebab case&amp;rdquo; to name the file (words separated by hyphens). For example, a pattern with the title &amp;ldquo;Menu button&amp;rdquo; should probably have the filename menu-button. Then you get a nice clean URL: username.github.io/your-library/patterns/menu-button.
If you&amp;rsquo;re not familiar with writing markdown, there are a number of tutorials available.</description>
    </item>
    
    <item>
      <title>Serving</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/serving/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/serving/</guid>
      <description>Serving locally While you&amp;rsquo;re creating content for your project, you&amp;rsquo;ll probably want to see what the finished product looks like. Fortunately, Infusion is easy to serve locally using the serve command:
npm run serve This will serve your working project from localhost:1313. Whenever you make changes to your files, the site will automatically rebuild. No need to refresh the web page!
Publishing on Github Pages Infusion creates a /docs folder containing the latest version of your site whenever you do an npm run build or a git commit.</description>
    </item>
    
    <item>
      <title>Writing inline demos</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/writing-inline-demos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/writing-inline-demos/</guid>
      <description>There are some issues with  Demo embedding, like the embeds not working offline. They also come with their own branding, which will clash with the pattern you&amp;rsquo;re trying to illustrate.
Infusion offers another option: a special demo shortcode that allows you to write HTML, CSS, and JavaScript directly into the markdown file. The outputted demo is encapsulated using Shadow DOM, so you don&amp;rsquo;t have to worry about broken styles and global JS.</description>
    </item>
    
    <item>
      <title>Printing</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/printing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/printing/</guid>
      <description>Infusion&amp;rsquo;s output site includes a one-page  Print version of the generated library, available at /print-version. So, if your library base URL is https://yourName.github.io/your-library, you can print the whole library — to PDF if wanted — from the following address:
https://yourName.github.io/your-library/print-version     Print styles are also provided for individual pattern pages so, if you wanted to print off a single pattern document, you can!
  </description>
    </item>
    
    <item>
      <title>Updating Infusion</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/updating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/updating/</guid>
      <description>The core of Infusion&amp;rsquo;s functionality is in its Hugo theme, also called Infusion. This is found in the theme folder.
 content docs lib snippets static themes  infusion    Do not &amp;ldquo;hack the core&amp;rdquo;. If you have any issues with Infusion, please report them to the Infusion Github repository and they will be dealt with ASAP.
Infusion is undergoing constant development, so keep an eye out for new releases.</description>
    </item>
    
    <item>
      <title>Expandable sections</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/expandable-sections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/expandable-sections/</guid>
      <description>In some cases, where there is a lot of content, it&amp;rsquo;s helpful to collapse certain sections. That way, readers get an overview of what&amp;rsquo;s in the content and can choose where to focus in. Infusion provides a shortcode method for creating expandable sections which generates accessible markup using aria-expanded.
The expandable shortcode takes three parameters:
 label — This is the label for the the section heading. level — This is the heading level (e.</description>
    </item>
    
    <item>
      <title>Print version</title>
      <link>https://thepaciellogroup.github.io/infusion/print-version/</link>
      <pubDate>Sat, 29 Jul 2017 22:48:43 +0100</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/print-version/</guid>
      <description>You don&amp;rsquo;t want to edit this file :-)</description>
    </item>
    
    <item>
      <title>Advanced examples</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/advanced-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/advanced-examples/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Basic examples</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/basic-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/basic-examples/</guid>
      <description>&amp;lt;section&amp;gt; &amp;lt;h1&amp;gt;Heading&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;Just some text&amp;lt;/p&amp;gt; &amp;lt;a href=&amp;quot;http://www.example.com/&amp;quot;&amp;gt;More…&amp;lt;/a&amp;gt; &amp;lt;/section&amp;gt;   Level 1 folder  Level 2 file Level 2 folder  Level 3 file Level 3 folder  Level 4 file  Level 3 folder  Level 4 file Level 4 file  Level 3 file  Level 2 folder  Level 3 file Level 3 file Level 3 file  Level 2 file  Level 1 file     Launch in separate window   Great stuff Just some text</description>
    </item>
    
    <item>
      <title>Color palettes</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/color-palettes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/color-palettes/</guid>
      <description>There&amp;rsquo;s no reason why your Infusion-powered pattern library has to be all about functionality. You can include style guide-like information such as color palettes too. The colors shortcode makes it easy to exhibit colors and their values together. Just supply a comma-separated list of CSS color values.
&amp;#x7b;{% colors &#34;#111111, #cccccc, #ffffff&#34; %}}  The result is a one row strip showing each color supplied in order. The colors for Infusion are greyscale:</description>
    </item>
    
    <item>
      <title>Command line</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/command-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/command-line/</guid>
      <description>Your pattern documentation may need to include commands for installing packages or using CLIs. Infusion offers the cmd shortcode for making code blocks look like terminal commands.
Here&amp;rsquo;s how you write it:
&amp;#x7b;{&amp;lt;cmd}} npm run start &amp;#x7b;{&amp;lt;/cmd}}  And here&amp;rsquo;s how it looks:
npm run start    The cmd shortcode currently only supports single commands. If you want to show multiple, successive commands use separate cmd blocks.
  </description>
    </item>
    
    <item>
      <title>File trees</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/file-trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/file-trees/</guid>
      <description>Representing folder/file structures is simple and accessible in Infusion. Which is just as well, because some components may need to conform to a certain folder structure.
The file tree is described using a markdown nested list structure:
&amp;#x7b;{% fileTree %}} * Level 1 folder * Level 2 file * Level 2 folder * Level 3 file * Level 3 folder * Level 4 file * Level 3 folder * Level 4 file * Level 4 file * Level 3 file * Level 2 folder * Level 3 file * Level 3 file * Level 3 file * Level 2 file * Level 1 file &amp;#x7b;{% /fileTree %}}  This is drawn in the following fashion, but preserves the underlying nested list structure for assistive technologies such as screen readers:</description>
    </item>
    
    <item>
      <title>Including images</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/media/including-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/media/including-images/</guid>
      <description>From time to time, you&amp;rsquo;ll be wanting to include images illustrating the documented pattern in hand. Images live in the static folder, which is a sibling of the /content folder you&amp;rsquo;ll be mostly working in.
 content static  images  logo.png menu-button.gif        When you first make a copy of Infusion, Infusion&amp;rsquo;s own logo will be included. You should replace this with your own company or project logo.</description>
    </item>
    
    <item>
      <title>Including videos</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/media/including-videos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/media/including-videos/</guid>
      <description>Infusion has a lot of its own shortcodes, but you can still use Hugo&amp;rsquo;s built in shortcodes. These include a simple shortcode for including YouTube videos in your content. The shortcode takes just one parameter — the video&amp;rsquo;s id.
&amp;#x7b;{&amp;lt;youtube w7Ft2ymGmfc}}  </description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/introduction/</guid>
      <description>Albos — an acronym for aria-labelledby On Steroids — is a (vanilla) JavaScript helper that makes it easier to associate an accessible name to page elements. Albos applies aria-labelledby attributes, but provides a more flexible and intuitive interface.
To learn more the accessible name computation, see (todo).
When to use? Please note that not all HTML elements can be given an accessible name using one of the ARIA labeling attributes.</description>
    </item>
    
    <item>
      <title>Notes &amp; warnings</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/notes-and-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/notes-and-warnings/</guid>
      <description>Infusion acknowledges that simple markdown is limiting when it comes to writing compelling documentation, so it provides a number of &amp;ldquo;shortcodes&amp;rdquo;. Shortcodes offer a simple syntax for including rich content. For example, Infusion provides shortcodes for including notes and warnings.
Notes You may wish to pick out some content in your pattern&amp;rsquo;s documentation as a note — an aside to the main thrust of the pattern&amp;rsquo;s description. This is possible using the following syntax:</description>
    </item>
    
    <item>
      <title>References</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/references/</guid>
      <description>Cross-references Infusion identifies the main content files in your documentation as patterns, and they&amp;rsquo;re kept in the content/ patterns folder. It&amp;rsquo;s easy to cross-reference patterns using the pattern shortcode. For example, I can reference the  Notes &amp;amp; warnings pattern. Here&amp;rsquo;s what the markdown looks like, including the shortcode:
I can reference the &amp;#x7b;{% pattern &#34;Notes &amp; warnings&#34; %}} pattern here.  This saves you having to worry about pathing and decorates the generated link with a bookmark icon, identifying the link as a pattern reference visually.</description>
    </item>
    
    <item>
      <title>Snippets</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/snippets/</guid>
      <description>A lot of the time, your larger documentation patterns will share some common techniques and utilities. For this reason, Infusion lets you save snippets of markdown in a snippets folder, alongside the main content folder.
The example visually-hidden.md snippet describes the CSS needed to create content that is visually hidden but still available to screen readers. Since this is a technique/utility you are likely to use often, it&amp;rsquo;s nice to be able to just drop a snippet into your markdown content.</description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/syntax/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tables of contents</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/writing/tables-of-contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/writing/tables-of-contents/</guid>
      <description>Pattern pages in Infusion that have two or more subheadings (&amp;lt;h2&amp;gt;s) automatically get a table of contents: a list of links to the main subsections for the page. This feature is made accessible as a navigation region with the &amp;ldquo;Table of contents&amp;rdquo; label and uses an ordered list. The table of contents markup for the  Setup page looks something like this:
&amp;lt;nav class=&amp;quot;toc&amp;quot; aria-labelledby=&amp;quot;toc-heading&amp;quot;&amp;gt; &amp;lt;h2 id=&amp;quot;toc-heading&amp;quot;&amp;gt;Table of contents&amp;lt;/h2&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#cleaning-the-content-folder&amp;quot;&amp;gt;“Cleaning” the content folder&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#the-setup-command&amp;quot;&amp;gt;The setup command&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#the-config-file&amp;quot;&amp;gt;The config file&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#including-a-logo&amp;quot;&amp;gt;Including a logo&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;/nav&amp;gt;  Tables of content are a neat way to break down the content of the page and give users a navigable overview.</description>
    </item>
    
    <item>
      <title>Tested using...</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/coding/tested/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/coding/tested/</guid>
      <description>When you&amp;rsquo;re an inclusive designer, it&amp;rsquo;s pertinent to do some testing. Following specs is one thing, but you need to verify that your component works okay for users.
Infusion provided a tested shortcode that lets you show which browsers and assistive technologies you&amp;rsquo;ve tried your design out in. Here&amp;rsquo;s an example. Note the commas and &amp;ldquo;+&amp;rdquo; signs.
&amp;#x7b;{% tested using=&#34;Firefox + JAWS, Chrome, Safari iOS + Voiceover, Edge&#34; %}}  This outputs:</description>
    </item>
    
    <item>
      <title>Welcome to Albos</title>
      <link>https://thepaciellogroup.github.io/infusion/patterns/welcome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/infusion/patterns/welcome/</guid>
      <description>Eentje Tweetje You can just write markdown here. But don&amp;rsquo;t forget there are lots of shortcodes to help you with writing and showing off code too. See the documentation for Infusion for full details.
Drietje &amp;lt;body lang=&amp;quot;nl&amp;quot;&amp;gt; &amp;lt;/body&amp;gt;     Tested using   Firefox with JAWS   Safari   Safari iOS with Jaws   Edge       Here&amp;rsquo;s an example of a note shortcode for adding little &amp;ldquo;oh and also&amp;rdquo; notes to your patterns&amp;rsquo; documentation.</description>
    </item>
    
  </channel>
</rss>